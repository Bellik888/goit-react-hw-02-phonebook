{"version":3,"sources":["components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Filter","handleChangeFilter","filter","inputFilterID","shortid","htmlFor","id","name","type","value","onChange","ContactForm","inputNameID","inputNumberID","state","number","handleChangeName","e","setState","target","handleChangeNumber","handleSubmit","preventDefault","contact","props","searchDuplicate","addNewContact","onSubmit","this","placeholder","Component","ContactListItem","ContactList","contacts","map","toLowerCase","includes","App","obj","prevState","alert","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.639a2554.chunk.js","sourcesContent":["import shortid from 'shortid';\n\nexport const Filter = ({ handleChangeFilter, filter }) => {\n  let inputFilterID = shortid();\n\n  return (\n    <div>\n      <label htmlFor={inputFilterID}>Find contacts by name</label>\n      <input\n        id={inputFilterID}\n        name={filter}\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n      ></input>\n    </div>\n  );\n};\n","import { Component } from 'react';\nimport shortid from 'shortid';\n\nexport class ContactForm extends Component {\n  inputNameID = shortid();\n  inputNumberID = shortid();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChangeName = e => {\n    this.setState({ name: e.target.value });\n  };\n  handleChangeNumber = e => {\n    this.setState({ number: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    let contact = {\n      id: shortid(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    if (this.state.name) {\n      this.setState({ contact });\n      this.props.searchDuplicate(this.state.name);\n      this.props.addNewContact(contact);\n      // if (!alert) {\n      //     this.props.addNewContact(contact);\n      // }\n      this.setState({ name: '', number: '' });\n    }\n    return;\n  };\n\n  render() {\n    return (\n      <section>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor={this.inputNameID}>Names</label>\n          <input\n            id={this.inputNameID}\n            name={this.state.name}\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChangeName}\n          ></input>\n\n          <label htmlFor={this.inputNumberID}>Number</label>\n          <input\n            id={this.inputNumberID}\n            name={this.state.number}\n            type=\"text\"\n            value={this.state.number}\n            placeholder=\"012-34-56\"\n            onChange={this.handleChangeNumber}\n          ></input>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </section>\n    );\n  }\n}\n","export const ContactListItem = ({ contact }) => {\n  return (\n    <li>\n      <p>\n        {contact.name} : {contact.number}\n      </p>\n    </li>\n  );\n};\n","import { ContactListItem } from '../ContactListItem/ContactListItem';\n\nexport const ContactList = ({ contacts, filter }) => {\n  return (\n    <section>\n      <ul>\n        {filter === ''\n          ? contacts.map(contact => (\n              <ContactListItem key={contact.id} contact={contact} />\n            ))\n          : contacts.map(\n              contact =>\n                contact.name.toLowerCase().includes(filter.toLowerCase()) && (\n                  <ContactListItem key={contact.id} contact={contact} />\n                ),\n            )}\n      </ul>\n    </section>\n  );\n};\n","import { Component } from 'react';\nimport './App.css';\nimport { Filter } from './components/Filter/Filter';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addNewContact = obj => {\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, obj],\n      };\n    });\n  };\n\n  searchDuplicate = value => {\n    this.state.contacts.map(\n      contact =>\n        value === contact.name && alert(`${value} is already in contacts!!!`),\n    );\n  };\n\n  handleChangeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          addNewContact={this.addNewContact}\n          searchDuplicate={this.searchDuplicate}\n          contacts={this.state.contacts}\n        />\n\n        <h2>Contacts</h2>\n        <Filter\n          filter={this.state.filter}\n          handleChangeFilter={this.handleChangeFilter}\n        />\n        <ContactList\n          contacts={this.state.contacts}\n          filter={this.state.filter}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}